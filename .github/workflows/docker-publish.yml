name: Build and Publish Docker Images

on:
  push:
    branches: [ main, master ]
    # Optionally trigger on tags
    tags: [ 'v*' ]
  # Allow manual trigger from the Actions tab
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        run: |
          # Extract version from git tag or use 'latest'
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=latest
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          
          # Set repository prefix
          REPO_PREFIX="conversation-analysis"
          echo "repo_prefix=$REPO_PREFIX" >> $GITHUB_OUTPUT
      
      # Build and push Claude agent
      - name: Build and push Claude agent image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.claude
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.meta.outputs.repo_prefix }}-claude:${{ steps.meta.outputs.version }}
          labels: |
            org.opencontainers.image.created=${{ steps.meta.outputs.date }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
      
      # Build and push GPT-4 agent
      - name: Build and push GPT-4 agent image  
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.gpt4
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.meta.outputs.repo_prefix }}-gpt4:${{ steps.meta.outputs.version }}
          labels: |
            org.opencontainers.image.created=${{ steps.meta.outputs.date }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }} 